{"ast":null,"code":"var _jsxFileName = \"/Users/mb/Projects/personal/project-leroy/web/src/App.jsx\";\n\n/* eslint-disable no-unused-expressions */\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Container from '@material-ui/core/Container';\nimport BirdCard from './BirdCard';\nconst useStyles = makeStyles(theme => createStyles({\n  card: {\n    maxWidth: 345,\n    [theme.breakpoints.down('xs')]: {\n      maxWidth: 'none',\n      width: '100%'\n    }\n  },\n  media: {\n    height: 250,\n    backgroundPosition: 'top'\n  },\n  container: {\n    marginTop: 80,\n    [theme.breakpoints.down('xs')]: {\n      marginTop: 60\n    }\n  }\n}));\nexport default function MediaCard() {\n  const classes = useStyles();\n  const [items, setItems] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const path = window.location.href.includes(\"10.0.4.79\") ? \"\" : \"http://10.0.4.79\"; // Note: the empty deps array [] means\n  // this useEffect will run once\n  // similar to componentDidMount()\n\n  useEffect(() => {\n    fetch(`${path}/visitations.json`).then(res => res.json()).then(items => {\n      setIsLoaded(true);\n\n      if (items.length > 0) {\n        setItems(items);\n      }\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AppBar, {\n    position: \"fixed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, \"Project Leroy\")))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, items.map((visit, index) => {\n    return /*#__PURE__*/React.createElement(BirdCard, {\n      key: index,\n      visit: visit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 24\n      }\n    });\n  })))));\n}","map":{"version":3,"sources":["/Users/mb/Projects/personal/project-leroy/web/src/App.jsx"],"names":["React","useEffect","useState","makeStyles","createStyles","Typography","Grid","AppBar","Toolbar","Container","BirdCard","useStyles","theme","card","maxWidth","breakpoints","down","width","media","height","backgroundPosition","container","marginTop","MediaCard","classes","items","setItems","error","setError","isLoaded","setIsLoaded","path","window","location","href","includes","fetch","then","res","json","length","map","visit","index"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-expressions */\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Container from '@material-ui/core/Container';\nimport BirdCard from './BirdCard';\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    card: {\n      maxWidth: 345,\n      [theme.breakpoints.down('xs')]: {\n        maxWidth: 'none',\n        width: '100%'\n      }\n    },\n    media: {\n      height: 250,\n      backgroundPosition: 'top'\n    },\n    container: {\n      marginTop: 80,\n      [theme.breakpoints.down('xs')]: {\n        marginTop: 60,\n      }\n    }\n  })\n);\n\nexport default function MediaCard() {\n  const classes = useStyles();\n  const [items, setItems] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const path = window.location.href.includes(\"10.0.4.79\") ? \"\" : \"http://10.0.4.79\";\n  \n  // Note: the empty deps array [] means\n  // this useEffect will run once\n  // similar to componentDidMount()\n  useEffect(() => {\n    fetch(`${path}/visitations.json`)\n      .then(res => res.json())\n      .then(\n        (items) => {\n          setIsLoaded(true);\n          if(items.length > 0) {\n            setItems(items);\n          }\n        },  \n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          setIsLoaded(true);\n          setError(error);\n        }\n      )\n  }, [])\n\n  return (\n    <Grid container direction=\"row\" spacing={1}>\n      <Grid item xs={12}>\n        <AppBar position=\"fixed\">\n          <Toolbar>\n            <Typography variant=\"h6\">\n              Project Leroy\n            </Typography>\n          </Toolbar>\n        </AppBar>\n      </Grid>\n      <Grid item xs={12}>\n        <Container className={classes.container}>\n          <Grid container spacing={3}>\n            {\n              items.map((visit, index) => { \n                return <BirdCard key={index} visit={visit}/> \n              })\n            }\n          </Grid>\n        </Container>\n      </Grid>\n    </Grid>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}